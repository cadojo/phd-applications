As Dr. Dave Akin's core robot software lead, I lived in
the weeds of constrained, performant software development. 
The University of Maryland's Space Systems Lab
([SSL](https://ssl.umd.edu)) develops and maintains an 8DOF serial manipulator 
([Ranger](https://ssl.umd.edu/ranger)) for satellite servicing and dexterous 
manipulation research. My implementation of one of Ranger's kinematic
[solvers](https://onlinelibrary.wiley.com/doi/abs/10.1002/1097-4563(200009)17:9%3C453::AID-ROB1%3E3.0.CO;2-A)
produced a performance hurdle: the computation required 
several intermediate-Jacobian solutions per-cycle, which I initially solved-for iteratively. 
I substantially improved the time-performance of each intermediate-Jacobian solve by 
using Julia's [`Symbolics.jl`](https://symbolics.juliasymbolics.org/)
to print analytical Jacobian solutions to performant, 
non-allocating `C++` functions; along the way, I contributed the required 
[fixes](https://github.com/JuliaSymbolics/Symbolics.jl/pull/72) to 
`Symbolics.jl`. SSL projects taught me to write performant software for computationally 
demanding applications. During graduate course projects, under Mr. Barbee's guidance, 
I learned how computation extends into discovery.

For the term project of my graduate Interplanetary Navigation & Guidance course, 
I replicated halo orbit and invariant manifold computations as summarized by Megan Rund's 
[thesis](https://digitalcommons.calpoly.edu/theses/1853/) on low-cost
interplanetary transfer techniques. After failing to find guidance in literature
for selecting from flavors of a particular halo orbit solver, I delivered a 
decision tree which mapped desired
orbit characteristics to compatible flavors of differential correction, several 
open source Julia [packages](https://github.com/cadojo/GeneralAstrodynamics.jl),
and over 130k [initial conditions](https://github.com/cadojo/CR3BP-Manifold-Research)
for periodic orbits. I was thrilled to have used computation to find true 
low-energy paths through the  solar system, and I soon discovered a vibrant community
of like-minded scientific software developers. After [presenting](https://youtu.be/WnvKaUsGv8w)
the foundations of my project at JuliaCon 2021, I was added to the
[`JuliaSpace`](https://github.com/JuliaSpace) GitHub organization. I was 
later invited to a [seminar](https://juliareach.github.io/juliareach-days-3/) 
on dynamical reachability. I continued to develop and explore scientific software in 
personal time, and in my professional roles at NASA.